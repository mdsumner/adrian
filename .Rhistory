library(odbc)
dstring <- "DRIVER={Manifold Project Driver (*.map)};DBQ=C:\\temp\\manifold.map;Unicode=True;Ansi=False;OpenGIS=True;DSN=Default;"
mapfile <- "C:\\data\\Radian\\odbc\\Drawing_9.0.map"
dstring <- sprintf("Driver={Manifold 9.0 Project Driver (*.map)};DBQ=%s;", mapfile)
con <- dbConnect(odbc::odbc(), .connection_string  = dstring)
con
install.packages("odbc")
library(odbc)
dstring <- "DRIVER={Manifold Project Driver (*.map)};DBQ=C:\\temp\\manifold.map;Unicode=True;Ansi=False;OpenGIS=True;DSN=Default;"
mapfile <- "C:\\data\\Radian\\odbc\\Drawing_9.0.map"
dstring <- sprintf("Driver={Manifold 9.0 Project Driver (*.map)};DBQ=%s;", mapfile)
con <- dbConnect(odbc::odbc(), .connection_string  = dstring)
con
odbc::dbGetInfo(con)
dbIsValid(con)
dbListTables(con)
dbExistsTable(con, "DrawingTable")
dbListFields(con, "mfd_meta")
dbReadTable(con, "mfd_meta")
library(odbc)
dstring <- "DRIVER={Manifold Project Driver (*.map)};DBQ=C:\\temp\\manifold.map;Unicode=True;Ansi=False;OpenGIS=True;DSN=Default;"
mapfile <- "C:\\data\\Radian\\odbc\\Drawing_9.0.map"
dstring <- sprintf("Driver={Manifold 9.0 Project Driver (*.map)};DBQ=%s;", mapfile)
con <- dbConnect(odbc::odbc(), .connection_string  = dstring)
con
library(odbc)
dstring <- "DRIVER={Manifold Project Driver (*.map)};DBQ=C:\\temp\\manifold.map;Unicode=True;Ansi=False;OpenGIS=True;DSN=Default;"
mapfile <- "C:\\data\\Radian\\odbc\\Drawing_9.0.map"
dstring <- sprintf("Driver={Manifold 9.0 Project Driver (*.map)};DBQ=%s;", mapfile)
con <- dbConnect(odbc::odbc(), .connection_string  = dstring)
con
library(odbc)
dstring <- "DRIVER={Manifold Project Driver (*.map)};DBQ=C:\\temp\\manifold.map;Unicode=True;Ansi=False;OpenGIS=True;DSN=Default;"
mapfile <- "C:\\data\\Radian\\odbc\\Drawing_9.0.160.3.map"
dstring <- sprintf("Driver={Manifold 9.0 Project Driver (*.map)};DBQ=%s;", mapfile)
con <- dbConnect(odbc::odbc(), .connection_string  = dstring)
con
library(DBI)
mapfile <- "C:\\data\\Radian\\odbc\\Drawing_9.0.map"
dstring <- sprintf("Driver={Manifold 9.0 Project Driver (Experimental) (*.map)};DBQ=%s;", mapfile)
con <- dbConnect(odbc::odbc(), .connection_string  = dstring)
tbl(con, "mfd_meta")
odbc::dbGetInfo(con)
dbIsValid(con)
dbListTables(con)
dbExistsTable(con, "DrawingTable")
dbListFields(con, "mfd_meta")
dbReadTable(con, "mfd_meta")
dbSendQuery(con, "SELECT [ID] FROM Tabl")
dbFetch(dbSendQuery(con, "SELECT [ID] FROM Tabl"))
dbFetch(dbSendQuery(con, "SELECT * FROM Tabl"))
library(odbc)
mapfile <- "C:\\data\\Radian\\odbc\\Drawing_9.0.map"
dstring <- sprintf("Driver={Manifold 9.0 Project Driver (Experimental) (*.map)};DBQ=%s;", mapfile)
con <- dbConnect(odbc::odbc(), .connection_string  = dstring)
con
# <OdbcConnection>  Database: C:\data\Radian\odbc\Drawing_9.0.map
# Radian Studio 9.0 Universal Edition (build 9.0.160.3) Version:  9.00.0003
dbReadTable(con, "mfd_meta")
dbFetch(dbSendQuery(con, "SELECT * FROM Tabl"))
tbl(con, "SELECT * FROM Tabl")
library(dplyr)
tbl(con, "SELECT * FROM Tabl")
tbl(con, "SELECT ID FROM Tabl")
tbl(con, "SELECT ID FROM Tabl WHERE ID == 1")
tbl(con, "SELECT ID FROM Tabl WHERE ID = 1")
library(odbc)
mapfile <- "C:\\data\\Radian\\odbc\\Drawing_9.0.map"
dstring <- sprintf("Driver={Manifold 9.0 Project Driver (Experimental) (*.map)};DBQ=%s;ReadOnly=true;", mapfile)
con <- dbConnect(odbc::odbc(), .connection_string  = dstring)
con
# <OdbcConnection>  Database: C:\data\Radian\odbc\Drawing_9.0.map
# Radian Studio 9.0 Universal Edition (build 9.0.160.3) Version:  9.00.0003
dbFetch(dbSendQuery(con, "SELECT * FROM Tabl"))
library(dplyr)
tbl(con, "SELECT ID FROM Tabl WHERE ID = 1") %>% explain()
dbFetch(dbSendQuery(con, "SELECT * FROM Tabl WHERE ID = 1"))
DBI::dbWriteTable(con, "mtcars", mtcars)
library(dplyr)
library(DBI)
mapfile <- "C:\\data\\Radian\\odbc\\Drawing_9.0.map"
dstring <- sprintf("Driver={Manifold 9.0 Project Driver (Experimental) (*.map)};DBQ=%s;ReadOnly=true;", mapfile)
con <- dbConnect(odbc::odbc(), .connection_string  = dstring)
con
DBI::dbWriteTable(con, "mtcars", mtcars)
close(con)
rm(con)
library(dplyr)
library(DBI)
mapfile <- "C:\\data\\Radian\\odbc\\Drawing_9.0.map"
dstring <- sprintf("Driver={Manifold 9.0 Project Driver (Experimental) (*.map)};DBQ=%s;ReadOnly=false;", mapfile)
con <- dbConnect(odbc::odbc(), .connection_string  = dstring)
con
DBI::dbWriteTable(con, "mtcars", mtcars)
dstring <- sprintf("Driver={Manifold 9.0 Project Driver (Experimental) (*.map)};DBQ=%s;", mapfile)
con <- dbConnect(odbc::odbc(), .connection_string  = dstring)
library(dplyr)
library(DBI)
mapfile <- "C:\\data\\Radian\\odbc\\Drawing_9.0.map"
dstring <- sprintf("Driver={Manifold 9.0 Project Driver (Experimental) (*.map)};DBQ=%s;", mapfile)
con <- dbConnect(odbc::odbc(), .connection_string  = dstring)
con
DBI::dbWriteTable(con, "mtcars", mtcars)
library(dplyr)
library(DBI)
mapfile <- "C:\\data\\Radian\\odbc\\Drawing_9.0.map"
dstring <- sprintf("Driver={Manifold 9.0 Project Driver (Experimental) (*.map)};DBQ=%s;", mapfile)
con <- dbConnect(odbc::odbc(), .connection_string  = dstring)
tbl(con, "mfd_meta")
DBI::dbWriteTable(con, "mtcars", mtcars)
install.packages("DBItest")
vignette("backend", package = "DBI")
devtools::use_testthat()
devtools::use_test("DBItest")
getwd()
devtools::create_description()
devtools::use_testthat()
devtools::use_test("DBItest")
vignette("test", package = "DBItest")
